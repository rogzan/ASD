"""
Dana jest tablica zawierająca n liczb z zakresu [0...n^2-1]. Napisz algorytm, który posortuje taką
tablicę w czasie O(n).

Rozwiązanie:
Sortujemy tablicę dwa razy używając algorytmu counting sort - raz po reszcie z dzielenia każdej liczby
przez n, a drugi raz po wyniku dzielenia całkowitoliczbowego przez n.

"""



def Sort(arr,n):
    counter=[0]*n

    for i in range(len(arr)):
        counter[arr[i]%n]+=1

    for i in range(1,n):
        counter[i]+=counter[i-1]

    result=[0]*len(arr)

    for i in range(len(arr)-1,-1,-1):
        result[counter[arr[i]%n]-1]=arr[i]
        counter[arr[i]%n]-=1

    for i in range(n):
        counter[i]=0

    for i in range(len(result)):
        counter[result[i]//n]+=1

    for i in range(1,n):
        counter[i]+=counter[i-1]

    for i in range(len(result)-1,-1,-1):
        arr[counter[result[i]//n]-1]=result[i]
        counter[result[i]//n]-=1

    return arr


if __name__=="__main__":
    arr=[3,8,0,35,99,143,4,8,34,66,99,23,5,67,34,126,34,143,111,125,45,89,65,32,12,9,0,13,5,8,129,139,56]
    arr=Sort(arr,12)
    print(arr)
